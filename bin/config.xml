<web>http://www.patriciogonzalezvivo.com</web>
<general>
    <fullscreen>0</fullscreen>
    <width>640</width>
    <height>480</height>
</general>
<surface>
    <id>1</id>
    <type>ofxKinect_rgb</type>
    <path>none</path>
    <visible>0</visible>
    <texture>
        <point>
            <x>240</x>
            <y>0</y>
        </point>
        <point>
            <x>480</x>
            <y>0</y>
        </point>
        <point>
            <x>480</x>
            <y>180</y>
        </point>
        <point>
            <x>240</x>
            <y>180</y>
        </point>
    </texture>
    <mask>
        <point>
            <x>0.000000000</x>
            <y>0.000000000</y>
        </point>
        <point>
            <x>1.000000000</x>
            <y>0.000000000</y>
        </point>
        <point>
            <x>1.000000000</x>
            <y>1.000000000</y>
        </point>
        <point>
            <x>0.000000000</x>
            <y>1.000000000</y>
        </point>
    </mask>
    <out>
        <active>1</active>
    </out>
    <frag>&#x0A;// &#x0A;// Empty Shader Patch for ofxComposer &#x0A;// by http://PatricioGonzalezVivo.com &#x0A;//&#x0A;// For quick GLSL prototyping this Patch have the next native variables&#x0A;//&#x0A;uniform sampler2DRect backbuffer; // Previus frameBuffer &#x0A;uniform sampler2DRect tex0; // Input texture number 0 &#x0A; // You can add as many as you want&#x0A; // just type name them &apos;tex&apos;+ N&#x0A;&#x0A;uniform vec2 size0; // tex0 resolution&#x0A;uniform vec2 resolution; // Patch resolution&#x0A;uniform vec2 window; // Window resolution&#x0A;uniform vec2 screen; // Screen resolution&#x0A;uniform vec2 mouse; // Mouse position on the screen&#x0A;uniform float time; // seconds &#x0A;&#x0A;void main( void ){&#x0A; vec2 st = gl_TexCoord[0].st; // gl_FragCoord.st;&#x0A; vec4 color = texture2DRect(tex0, st);&#x0A; &#x0A; gl_FragColor = vec4( color.rgb, color.a );&#x0A;}&#x0A;</frag>
    <format>6408</format>
    <passes>1</passes>
</surface>
<surface>
    <id>2</id>
    <type>ofxEden</type>
    <path>none</path>
    <visible>1</visible>
    <texture>
        <point>
            <x>0</x>
            <y>180</y>
        </point>
        <point>
            <x>480</x>
            <y>180</y>
        </point>
        <point>
            <x>480</x>
            <y>500</y>
        </point>
        <point>
            <x>0</x>
            <y>500</y>
        </point>
    </texture>
    <mask>
        <point>
            <x>0.000000000</x>
            <y>0.000000000</y>
        </point>
        <point>
            <x>1.000000000</x>
            <y>0.000000000</y>
        </point>
        <point>
            <x>1.000000000</x>
            <y>1.000000000</y>
        </point>
        <point>
            <x>0.000000000</x>
            <y>1.000000000</y>
        </point>
    </mask>
    <out>
        <active>1</active>
    </out>
</surface>
<surface>
    <id>3</id>
    <type>ofxKinect_depth</type>
    <path>none</path>
    <visible>0</visible>
    <texture>
        <point>
            <x>0</x>
            <y>0</y>
        </point>
        <point>
            <x>240</x>
            <y>0</y>
        </point>
        <point>
            <x>240</x>
            <y>180</y>
        </point>
        <point>
            <x>0</x>
            <y>180</y>
        </point>
    </texture>
    <mask>
        <point>
            <x>0.000000000</x>
            <y>0.000000000</y>
        </point>
        <point>
            <x>1.000000000</x>
            <y>0.000000000</y>
        </point>
        <point>
            <x>1.000000000</x>
            <y>1.000000000</y>
        </point>
        <point>
            <x>0.000000000</x>
            <y>1.000000000</y>
        </point>
    </mask>
    <out>
        <active>1</active>
    </out>
</surface>
